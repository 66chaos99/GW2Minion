local tbl = 
{
	class = "BehaviorTree",
	nodes = 
	{
		
		{
			class = "Sequence",
			nodes = 
			{
				
				{
					class = "Action",
					nodes = 
					{
					},
					variables = 
					{
						finishcode = "",
						info = "",
						monitorcode = "GUI:Text('Last State: '..tostring(self:getState()))",
						runcode = "if(ml_global_information.GameState == GW2.GAMESTATE.GAMEPLAY) then\n\t\tself:success()\nelse\n\t\tself:fail()\nend",
						startcode = "",
						xposoffset = 0,
					},
				},
				
				{
					class = "Action",
					nodes = 
					{
					},
					variables = 
					{
						finishcode = "",
						info = "",
						monitorcode = "GUI:Text('Last State: '..tostring(self:getState()))",
						runcode = "if(context.movetomap_targetmapid > 0 and ml_global_information.CurrentMapID ~= context.movetomap_targetmapid) then\n\t\tself:success()\n\t\treturn\nelseif(ml_global_information.CurrentMapID == context.movetomap_targetmapid) then\n\t\td(\"[MoveToMap]: Target map reached\")\n\t\tml_bt_mgr.running = false\nend\nself:fail()",
						startcode = "",
						xposoffset = 0,
					},
				},
				
				{
					class = "BehaviorTree",
					nodes = 
					{
					},
					variables = 
					{
						expanded = true,
						filename = "NavToMap.st",
						finishcode = "",
						info = "",
						menucode = "",
						monitorcode = "GUI:Text('Last State: '..tostring(self:getState())) GUI:Text('Filename: '..self.variables.filename) GUI:Text('Filepath: '..self.filepath)",
						runcode = "context.movetomap_targetmapid = context.movetomap_targetmapid or self.variables.targetmapid\ncontext.movetomap_usewaypoints = context.movetomap_usewaypoints or self.variables.usewaypoints",
						startcode = "",
						subtreeuicode = "local maplist, mapnamelist = gw2_datamanager.GetMapNameList()\nif(table.valid(maplist) and table.valid(mapnamelist)) then\n\t\tlocal maplist, mapnamelist = gw2_datamanager.GetMapNameList()\n\t\tlocal selectedIndex,changed = GUI:Combo(\"Select map\", self.variables.selectedmapindex or 1, mapnamelist)\n\t\tif(changed) then\n\t\t\t\tself.variables.selectedmapindex = selectedIndex\n\t\t\t\tself.variables.targetmapid = maplist[selectedIndex].id\n\t\tend\n\t\t\n\t\tlocal checked,pressed = GUI:Checkbox(\"Use waypoints\", self.variables.usewaypoints or false)\n\t\tif(pressed) then\n\t\t\t\tself.variables.usewaypoints = checked\n\t\tend\nelse\n\t\tGUI:Text(\"No map data available\")\nend\n",
						xposoffset = 0,
					},
				},
			},
			variables = 
			{
				expanded = true,
				info = "",
				monitorcode = "GUI:Text('Last State: '..tostring(self:getState())) GUI:Text('Active Child: '..tostring(self.actualTask or 'None'))",
				xposoffset = 0,
			},
		},
	},
	variables = 
	{
		expanded = true,
		filename = "MoveToMap.bt",
		finishcode = "d(\"MoveToMap off\")\nml_global_information.Stop()",
		info = "",
		menucode = "if(Settings.GW2Minion.movetomap_selectedmapindex == nil) then Settings.GW2Minion.movetomap_selectedmapindex = 1 end\nif(Settings.GW2Minion.movetomap_targetmapid == nil) then Settings.GW2Minion.movetomap_targetmapid = 0 end\nif(Settings.GW2Minion.usewaypoints == nil) then Settings.GW2Minion.usewaypoints = false end\n\nGUI:SetNextTreeNodeOpened(true,GUI.SetCond_Appearing)\nif(GUI:TreeNode(GetString(\"movetomap\"))) then\n\t\tlocal maplist, mapnamelist = gw2_datamanager.GetMapNameList()\n\t\tif(table.valid(maplist) and table.valid(mapnamelist)) then\n\t\t\tlocal selectedIndex,changed = GUI:Combo(\"Select map\", Settings.GW2Minion.movetomap_selectedmapindex, mapnamelist)\n\t\t\tif(changed) then\n\t\t\t\t\tSettings.GW2Minion.movetomap_selectedmapindex = selectedIndex\n\t\t\t\t\tSettings.GW2Minion.movetomap_targetmapid = maplist[selectedIndex].id\n\t\t\tend\n\t\t\t\n\t\t\tlocal checked,pressed = GUI:Checkbox(\"Use waypoints\", Settings.GW2Minion.usewaypoints or false)\n\t\t\tif(pressed) then\n\t\t\t\tSettings.GW2Minion.usewaypoints = checked\n\t\t\tend\n\t\telse\n\t\t\tGUI:Text(\"No map data available\")\n\t\tend\n\t\tGUI:TreePop()\nend",
		monitorcode = "GUI:Text('Last State: '..tostring(self:getState())) GUI:Text('Filename: '..self.variables.filename) GUI:Text('Filepath: '..self.filepath)",
		runcode = "context.movetomap_targetmapid = Settings.GW2Minion.movetomap_targetmapid\ncontext.movetomap_usewaypoints = Settings.GW2Minion.usewaypoints",
		startcode = "d(\"MoveToMap on\")\nml_global_information.Start()",
		subtreeuicode = "",
		xposoffset = 0,
	},
}



return tbl